#!/bin/sh
CFG="$HOME/.config/_screenshotrc"
LOCALDIR="$HOME/_public/http/shots/"

CONVERT=${CONVERT-"convert"}
SUM=md5sum
EDIT=viewnior

# -- init
SRC="$1"
DATE="$2"
ENCD="$3"
SSRC=
PID=
TRG=
EXT=
ENDADDR=
#TAILPID=
# -- calls
_exit ()
{
	echo "$@" >/dev/stderr
	exit 1
}

module_bitcheese ()
{
	SRC=$1
	DST=$2
	RPATH=$3
	( mkdir -p "${SRC}_bitcheese" >/dev/null 2>&1 &&\
		cp $SRC "${SRC}_bitcheese/$DST" ) && SRC="${SRC}_bitcheese/$DST"
	curl -v -o /dev/stdout -F file="@$SRC"\
		http://dump.bitcheese.net/upload-image 2>&1 |\
		tee "$SRC.bitcheese"
	cat "$SRC.bitcheese" | grep 'Location:' | cut -d'/' -f 5-6
}

module_sftp ()
{
	SRC=$1
	DST=$2
	RPATH=$3
	echo "put $SRC $DST" | sftp "$RPATH"
	[ $? -eq 0 ] && echo "$DST"
}

module_local ()
{
	SRC=$1
	DST=$2
	RPATH=$3
	cp $SRC "$RPATH/$DST"
	echo $DST
}
# -- code
echo "START"
 
[ ! -r "$CFG" ] && _exit "Please, feel '$CFG' and try agane"
eval $(cat "$CFG" | grep -v '^##' | grep '^#' | cut -d'#' -f 2-)

# controle sum
[ ! -e "$SRC" ] && _exit "$SRC not exists"
[ -z "$ENCD" ] && _exit "file format is unknown"
[ -z "$DATE" ] && _exit "unknown is unknown"

(
	if [ ! -r "$SRC.sum" ] || (! $SUM -c --status "$SRC.sum");
	then
		$SUM "$SRC" > "$SRC.sum" &
		PID="$!"
		$CONVERT "$SRC" "jpg:$SRC.jpg" &
		PID="$PID $!"
		$CONVERT "$SRC" "png:$SRC.png" &
		wait $PID
		( optipng >/dev/null 2>&1 ) >/dev/null 2>&1
		[ $? -eq 0 ] && optipng -o 9 "$SRC.png" >/dev/null 2>&1
	fi
) &
PID=$!

TRG=$(dialog --stdout --menu "Choose target" 0 0 0\
	edit "view/edit image with $EDIT"\
	$(cat "$CFG" | grep -v ^$ | grep -v ^# | awk '{print $1" "$2}'))
[ $? -ne 0 ] && exit 0
clear

if [ "$TRG" = "edit" ];
then
	echo "start $EDIT"
	$EDIT $SRC
	# wait for conv and restart
	echo "wait fork"
	[ ! -z "$PID" ] && wait $PID
	echo "reset"
	exec $0 $@
	# test sum
fi

if [ ! -z "$PID" ];
then
	echo -n "wait convert... "
	wait $PID
	echo "OK"
fi 

MODULE=$(cat "$CFG" | grep -v ^# | grep "^$TRG[[:space:]]" | awk '{print $3}')
PUTADDR=$(cat "$CFG" | grep -v ^# | grep "^$TRG[[:space:]]" | awk '{print $4}')
CLIPADDR=$(cat "$CFG" | grep -v ^# | grep "^$TRG[[:space:]]" | awk '{print $5}')
PUTADDR=$(eval "echo `echo $PUTADDR`")
CLIPADDR=$(eval "echo `echo $CLIPADDR`")
[ -z "$MODULE" ] && _exit "$TRG: module not set"
[ -z "$PUTADDR" ] && _exit "$TRG: putaddr not set"
[ -z "$CLIPADDR" ] && _exit "$TRG: clipaddr not set"

(
	echo "copy image remotly (background)"
	RCOD=1
	SSRC="$SRC"
	PID=""
	for EXT in "jpg" "png";
	do
		(
			while [ $RCOD != 0 ];
			do
				SRC="$SSRC.$EXT"
				eval "module_$MODULE '$SRC' '$DATE.$EXT' '$PUTADDR' > '$SRC.log' 2>&1"
				RCOD=$?
				[ $RCOD -ne 0 ] && sleep 1
			done
		) &
		PID="$PID $!"
	done
	wait $PID
) &
PID="$!"

TRG=$(dialog --stdout --menu "Choose format to copy" 0 0 0\
	png "PNG with size $(stat -c %s $SRC.png 2>/dev/null || echo 'not prepared')"\
	jpg "JPG with size $(stat -c %s $SRC.jpg 2>/dev/null || echo 'not prepared')")
[ $? -ne 0 ] && exit 0
clear
echo "you choose: $TRG"
echo "wait fot put module ($PID)"
tail --follow=name "$SRC.$TRG.log" 2>/dev/null &
#TAILPID="$!"
wait "$PID"
#kill "$TAILPID" >/dev/null 2>&1

if [ ! -r "$SRC.png.log" ];
then
	echo "putting PNG can't complete"
else
	EXT=$(cat "$SRC.png.log" | tail -n 1)
	echo "complite PNG:"
	echo " $CLIPADDR/$EXT"
	[ "$TRG" = "png" ] && ENDADDR="$CLIPADDR/$EXT"
fi

if [ ! -r "$SRC.jpg.log" ];
then
	echo "putting JPG can't complete"
else
	EXT=$(cat "$SRC.jpg.log" | tail -n 1)
	echo "complete JPG:"
	echo " $CLIPADDR/$EXT"
	[ "$TRG" = "jpg" ] && ENDADDR="$CLIPADDR/$EXT"
fi

SRC=$(xclip -o -selection clipboard 2>/dev/null)
echo "xclip in loops: 1"
echo -n "$ENDADDR" | xclip -loops 1 -quiet -selection clipboard 2>&1
echo "END"
echo "$SRC" | xclip -loops 1 -silent -selection clipboard

